if test x$kig_warn_about_disabling_python = xyes; then
  echo ""
  echo "Kig Python scripting support has been disabled, because you "
  echo "are missing the necessary headers and/or libraries."
  echo "In order to use Kig Python scripting, you need to have "
  echo "Python installed, along with its development package ( e.g. "
  echo "libpython-dev ), and also the Boost.Python library, along with "
  echo "its development package ( e.g. libboost-python-dev )."
  echo ""
  echo "Kig will continue to function without Python scripting support, "
  echo "but you will not be able to created Python scripted objects, or "
  echo "load Kig files that use them."
  echo
  echo "Installing the libraries:"
  echo "The python development libraries themselves are almost certainly "
  echo "packaged by your favourite distribution.  Look for a package name "
  echo "like libpython-dev, with possibly a version number inserted "
  echo "somewhere in the name..  For the Boost.Python libs, check this "
  echo "documentation: \"http://boost.org/more/download.html\" and "
  echo "\"http://boost.org/more/download.html#Installation\"  or look for "
  echo "a package like libboost-python-dev or libboost-dev.. "
  echo ""
fi

if test "x$kig_enable_python_scripting" = "xyes"; then
    # tell users about the Boost.Python 1.30 + GCC 3.2+ problem and patch. 
    cat << EOF

Kig WARNING
===========
There is a problem using unpatched Boost.Python 1.30 in combination
with GCC 3.2 and above.  In some distributions, like Debian sarge, 
this problem has been fixed, but in other distributions, the problem 
may still be there.  If you encounter problems while compiling Kig, 
then you should try to re-run configure with the option 
"--disable-kig-python-scripting".  This may fix the compilation, but 
you will not be able to use the Kig Python Scripting.
EOF
fi
