FEATURES
here are some nice Kig features i'd like to show off :)
- More than 40 various nice objects: from the easiest ones ( points ),
  up to lines, circles, conics, cubics, and more. See the Objects
  menu...
- Macros: the power of constructing new objects using the builtin
  ones. If you want to try, open macrotest.kig, then click the 
  button to the left of the fullscreen button, select the three
  corners of the triangle, then click the button again, click the
  circle, click the button again, type in a name.  Then check out the
  new type with the other circle types.  You can't really see the
  difference between built-in types and macro's
- I've given quite some attention to making Kig as intuitive to use as
  possible.  It has various unique features like the nice RMB menu's,
  the intuitive construction mode, etc.
- is a KPart: try opening macrotest.kig from konqueror, if it doesn't 
  work yet, open your kcontrol, then go to "File Browsing"->"File
  Associations", click add, group:"application", name:"x-kig", open
  the "embedding" tab page for the new type, click "add", find
  "KigPart" (if you installed Kig correctly (did you get the
  "--prefix" on your configure right?) , it should be there), and add
  it. then try opening macrotest.kig again
- Kig supports various file formats...  See the filters directory.
  Currently Kig has read-write support for native files ( which is an
  imho clean xml format ) and for the older version of the Kig file
  format; read support for KGeo, KSeg and, partially, for Dr. Geo
  and Cabri files. This is an area where we plan working on...
- Kig can export a document in several formats: the most common are
  images, and you can choose among the types supported by Qt and KDE.
  Moreover, the other supported formats are: XFig files, and SVG and
  LaTeX documents. These are useful since not all other programs
  support Kig files yet... ;)
- Kig is very compatible with the program it was intended to replace,
  KGeo.  It supports all of its Object types and most of its file
  format... 
- There is a very flexible mechanism for supporting TextLabels with
  variable parts..  Check out the text label wizard for more
  explanation... 
- nice support for Locuses, inspired by KSeg's version of this.  Check
  the documentation and examples/locustest.kig for more info..
- flexible transformation facility

PLANNED FEATURES
For a list of planned features, check out the TODO file.
