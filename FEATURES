FEATURES
here are some nice Kig features i'd like to show off :)
- macro's: if you want to try, open macrotest.kig, then click the 
  button to the left of the fullscreen button, select the three
  corners of the triangle, then click the button again, click the
  circle, click the button again, type in a name.  Then check out the
  new type with the other circle types.  You can't really see the
  difference between built-in types and macro's
- userfriendly manner of constructing things... You see things you're
  constructing, and clicking gives you points etc.  Try constructing a
  segment, and you'll see what i mean ( i hope :)
- is a KPart: try opening macrotest.kig from konqueror, if it doesn't 
  work yet, open your kcontrol, then go to "File Browsing"->"File
  Associations", click add, group:"application", name:"x-kig", open
  the "embedding" tab page for the new type, click "add", find
  "KigPart" (if you installed Kig correctly (did you get the
  "--prefix" on your configure right?) , it should be there), and add
  it. then try opening macrotest.kig again
- recently, i added support for Locuses, this is another thing from
  KSeg which i also implemented in my program.  It's a very cool idea,
  and it supports rather advanded stuff like conic's in an easy (for
  the developer :) way...
  To see it work, check out the locustest.kig file in the examples
  directory 
- Kig supports various file formats...  See the filters directory.
  Currently i have implemented read-write support for 
  native kig files ( which is an imho clean xml format ), and read
  support for kgeo files, but this is an area where i plan working
  on... ( KGeo and KSeg read-write, Cabri at least read support )..
- Kig has an option "Export to image", which allows you to export a
  kig document into one of the graphics formats that KDE or Qt
  support...  This is useful since not all other programs support Kig
  files yet... ;)
- Kig is very compatible with the program it was intended to replace,
  KGeo.  It supports all of its Object types and most of its file
  format... 

PLANNED FEATURES
For a list of planned features, check out the TODO file.
